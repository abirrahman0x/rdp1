name: Windows RDP with Pinggy

on:
  workflow_dispatch: # Manual trigger
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force;
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      shell: powershell

    - name: Install OpenSSH
      run: |
        choco install openssh -y --force
      shell: powershell

    - name: Refresh Environment
      run: |
        Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
        refreshenv
        # Add OpenSSH to PATH explicitly
        $env:PATH += ";C:\Program Files\OpenSSH-Win64"
        # Verify PATH and SSH
        Write-Output "Current PATH: $env:PATH"
        ssh -V
      shell: powershell

    - name: Configure Windows Firewall
      run: |
        # Allow RDP port 3389
        netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport hunt=3389
      shell: powershell

    - name: Start Pinggy Tunnel
      run: |
        # Run SSH in background and capture output
        Start-Process -FilePath "ssh" -ArgumentList "-p 443 -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -R0:localhost:3389 tcp@ap.a.pinggy.io" -RedirectStandardOutput "pinggy.log" -NoNewWindow
        # Wait briefly to capture initial output
        Start-Sleep -Seconds 10
        # Display Pinggy output
        Get-Content -Path "pinggy.log"
      shell: powershell

    - name: Keep Workflow Alive
      run: |
        # Keep the workflow running for RDP access
        Start-Sleep -Seconds 3600 # Adjust time as needed (e.g., 1 hour)
      shell: powershell
